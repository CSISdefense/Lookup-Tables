--List new [detached_award_proc_unique] for insertion into Contract.contract_transaction_unique_key
SELECT fk.[detached_award_proc_unique],
'Contract.contract_transaction_unique_key' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN Contract.contract_transaction_unique_key as pk
On pk.contract_transaction_unique_key=fk.[detached_award_proc_unique]
WHERE pk.contract_transaction_unique_key is NULL
GROUP BY fk.[detached_award_proc_unique]
ORDER BY fk.[detached_award_proc_unique]


--List new [action_type] and updated action_type_name for insertion into FPDSTypeTable.reasonformodification
SELECT fk.[action_type],
max(iif(fk.action_type_name=pk.reasonformodificationText or
	fk.action_type_name='' or
	charindex('('+fk.action_type_name+')',pk.reasonformodificationText )>0,
	NULL,fk.action_type_name)) as MaxOfNewFKaction_type_name,
count(distinct iif(fk.action_type_name=pk.reasonformodificationText or
	fk.action_type_name='' or
	charindex('('+fk.action_type_name+')',pk.reasonformodificationText )>0,
	NULL,fk.action_type_name)) as unmatched_name_count,
pk.reasonformodificationText as PKreasonformodificationText,
max(iif(fk.action_type_name=pk.reasonformodificationText or
	fk.action_type_name='' or
	charindex('('+fk.action_type_name+')',pk.reasonformodificationText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.reasonformodification' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.reasonformodification as pk
On pk.reasonformodification=fk.[action_type]
GROUP BY fk.[action_type], pk.reasonformodificationText
HAVING max(iif(fk.action_type_name=pk.reasonformodificationText or
	fk.action_type_name='' or
	charindex('('+fk.action_type_name+')',pk.reasonformodificationText )>0,
	0,1))=1
ORDER BY fk.[action_type]


--List new [agency_id] for insertion into FPDSTypeTable.AgencyID
SELECT fk.[agency_id],
'FPDSTypeTable.AgencyID' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.AgencyID as pk
On pk.AgencyID=fk.[agency_id]
WHERE pk.AgencyID is NULL
GROUP BY fk.[agency_id]
ORDER BY fk.[agency_id]


--List new [award_or_idv_flag] for insertion into Contract.award_or_idv_flag
SELECT fk.[award_or_idv_flag],
'Contract.award_or_idv_flag' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN Contract.award_or_idv_flag as pk
On pk.award_or_idv_flag=fk.[award_or_idv_flag]
WHERE pk.award_or_idv_flag is NULL
GROUP BY fk.[award_or_idv_flag]
ORDER BY fk.[award_or_idv_flag]


--List new [awardee_or_recipient_uniqu] for insertion into Vendor.VendorName
SELECT fk.[awardee_or_recipient_uniqu],
'Vendor.VendorName' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN Vendor.VendorName as pk
On pk.vendorname=fk.[awardee_or_recipient_uniqu]
WHERE pk.vendorname is NULL
GROUP BY fk.[awardee_or_recipient_uniqu]
ORDER BY fk.[awardee_or_recipient_uniqu]


--List new [awarding_agency_code] and updated awarding_agency_name for insertion into agency.awarding_agency_code
SELECT fk.[awarding_agency_code],
max(iif(fk.awarding_agency_name=pk.awarding_agency_name or
	fk.awarding_agency_name='' or
	charindex('('+fk.awarding_agency_name+')',pk.awarding_agency_name )>0,
	NULL,fk.awarding_agency_name)) as MaxOfNewFKawarding_agency_name,
count(distinct iif(fk.awarding_agency_name=pk.awarding_agency_name or
	fk.awarding_agency_name='' or
	charindex('('+fk.awarding_agency_name+')',pk.awarding_agency_name )>0,
	NULL,fk.awarding_agency_name)) as unmatched_name_count,
pk.awarding_agency_name as PKawarding_agency_name,
max(iif(fk.awarding_agency_name=pk.awarding_agency_name or
	fk.awarding_agency_name='' or
	charindex('('+fk.awarding_agency_name+')',pk.awarding_agency_name )>0,
	1,0)) as any_name_match,
'agency.awarding_agency_code' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN agency.awarding_agency_code as pk
On pk.awarding_agency_code=fk.[awarding_agency_code]
GROUP BY fk.[awarding_agency_code], pk.awarding_agency_name
HAVING max(iif(fk.awarding_agency_name=pk.awarding_agency_name or
	fk.awarding_agency_name='' or
	charindex('('+fk.awarding_agency_name+')',pk.awarding_agency_name )>0,
	0,1))=1
ORDER BY fk.[awarding_agency_code]


--List new [awarding_sub_tier_agency_c] and updated awarding_sub_agency_name for insertion into FPDSTypeTable.AgencyID
SELECT fk.[awarding_sub_tier_agency_c],
max(iif(fk.awarding_sub_agency_name=pk.AgencyIDtext or
	fk.awarding_sub_agency_name='' or
	charindex('('+fk.awarding_sub_agency_name+')',pk.AgencyIDtext )>0,
	NULL,fk.awarding_sub_agency_name)) as MaxOfNewFKawarding_sub_agency_name,
count(distinct iif(fk.awarding_sub_agency_name=pk.AgencyIDtext or
	fk.awarding_sub_agency_name='' or
	charindex('('+fk.awarding_sub_agency_name+')',pk.AgencyIDtext )>0,
	NULL,fk.awarding_sub_agency_name)) as unmatched_name_count,
pk.AgencyIDtext as PKAgencyIDtext,
max(iif(fk.awarding_sub_agency_name=pk.AgencyIDtext or
	fk.awarding_sub_agency_name='' or
	charindex('('+fk.awarding_sub_agency_name+')',pk.AgencyIDtext )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.AgencyID' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.AgencyID as pk
On pk.AgencyID=fk.[awarding_sub_tier_agency_c]
GROUP BY fk.[awarding_sub_tier_agency_c], pk.AgencyIDtext
HAVING max(iif(fk.awarding_sub_agency_name=pk.AgencyIDtext or
	fk.awarding_sub_agency_name='' or
	charindex('('+fk.awarding_sub_agency_name+')',pk.AgencyIDtext )>0,
	0,1))=1
ORDER BY fk.[awarding_sub_tier_agency_c]


--List new [business_categories] for insertion into FPDSTypeTable.TypeofBusinessDD350
SELECT fk.[business_categories],
'FPDSTypeTable.TypeofBusinessDD350' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.TypeofBusinessDD350 as pk
On pk.TypeOfBusiness=fk.[business_categories]
WHERE pk.TypeOfBusiness is NULL
GROUP BY fk.[business_categories]
ORDER BY fk.[business_categories]


--List new [commercial_item_acquisitio] and updated commercial_item_acquisition_procedures_name for insertion into FPDSTypeTable.CommercialItemAcquisitionProcedures
SELECT fk.[commercial_item_acquisitio],
max(iif(fk.commercial_item_acquisition_procedures_name=pk.CommercialItemAcquisitionProceduresText or
	fk.commercial_item_acquisition_procedures_name='' or
	charindex('('+fk.commercial_item_acquisition_procedures_name+')',pk.CommercialItemAcquisitionProceduresText )>0,
	NULL,fk.commercial_item_acquisition_procedures_name)) as MaxOfNewFKcommercial_item_acquisition_procedures_name,
count(distinct iif(fk.commercial_item_acquisition_procedures_name=pk.CommercialItemAcquisitionProceduresText or
	fk.commercial_item_acquisition_procedures_name='' or
	charindex('('+fk.commercial_item_acquisition_procedures_name+')',pk.CommercialItemAcquisitionProceduresText )>0,
	NULL,fk.commercial_item_acquisition_procedures_name)) as unmatched_name_count,
pk.CommercialItemAcquisitionProceduresText as PKCommercialItemAcquisitionProceduresText,
max(iif(fk.commercial_item_acquisition_procedures_name=pk.CommercialItemAcquisitionProceduresText or
	fk.commercial_item_acquisition_procedures_name='' or
	charindex('('+fk.commercial_item_acquisition_procedures_name+')',pk.CommercialItemAcquisitionProceduresText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.CommercialItemAcquisitionProcedures' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.CommercialItemAcquisitionProcedures as pk
On pk.CommercialItemAcquisitionProcedures=fk.[commercial_item_acquisitio]
GROUP BY fk.[commercial_item_acquisitio], pk.CommercialItemAcquisitionProceduresText
HAVING max(iif(fk.commercial_item_acquisition_procedures_name=pk.CommercialItemAcquisitionProceduresText or
	fk.commercial_item_acquisition_procedures_name='' or
	charindex('('+fk.commercial_item_acquisition_procedures_name+')',pk.CommercialItemAcquisitionProceduresText )>0,
	0,1))=1
ORDER BY fk.[commercial_item_acquisitio]


--List new [commercial_item_test_progr] and updated simplified_procedures_for_certain_commercial_items for insertion into FPDSTypeTable.simplified_procedures_for_certain_commercial_items_code
SELECT fk.[commercial_item_test_progr],
max(iif(fk.simplified_procedures_for_certain_commercial_items=pk.simplified_procedures_for_certain_commercial_items or
	fk.simplified_procedures_for_certain_commercial_items='' or
	charindex('('+fk.simplified_procedures_for_certain_commercial_items+')',pk.simplified_procedures_for_certain_commercial_items )>0,
	NULL,fk.simplified_procedures_for_certain_commercial_items)) as MaxOfNewFKsimplified_procedures_for_certain_commercial_items,
count(distinct iif(fk.simplified_procedures_for_certain_commercial_items=pk.simplified_procedures_for_certain_commercial_items or
	fk.simplified_procedures_for_certain_commercial_items='' or
	charindex('('+fk.simplified_procedures_for_certain_commercial_items+')',pk.simplified_procedures_for_certain_commercial_items )>0,
	NULL,fk.simplified_procedures_for_certain_commercial_items)) as unmatched_name_count,
pk.simplified_procedures_for_certain_commercial_items as PKsimplified_procedures_for_certain_commercial_items,
max(iif(fk.simplified_procedures_for_certain_commercial_items=pk.simplified_procedures_for_certain_commercial_items or
	fk.simplified_procedures_for_certain_commercial_items='' or
	charindex('('+fk.simplified_procedures_for_certain_commercial_items+')',pk.simplified_procedures_for_certain_commercial_items )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.simplified_procedures_for_certain_commercial_items_code' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.simplified_procedures_for_certain_commercial_items_code as pk
On pk.simplified_procedures_for_certain_commercial_items_code=fk.[commercial_item_test_progr]
GROUP BY fk.[commercial_item_test_progr], pk.simplified_procedures_for_certain_commercial_items
HAVING max(iif(fk.simplified_procedures_for_certain_commercial_items=pk.simplified_procedures_for_certain_commercial_items or
	fk.simplified_procedures_for_certain_commercial_items='' or
	charindex('('+fk.simplified_procedures_for_certain_commercial_items+')',pk.simplified_procedures_for_certain_commercial_items )>0,
	0,1))=1
ORDER BY fk.[commercial_item_test_progr]


--List new [consolidated_contract] and updated consolidated_contract_name for insertion into Contract.consolidatedcontract
SELECT fk.[consolidated_contract],
max(iif(fk.consolidated_contract_name=pk.consolidated_contract_name or
	fk.consolidated_contract_name='' or
	charindex('('+fk.consolidated_contract_name+')',pk.consolidated_contract_name )>0,
	NULL,fk.consolidated_contract_name)) as MaxOfNewFKconsolidated_contract_name,
count(distinct iif(fk.consolidated_contract_name=pk.consolidated_contract_name or
	fk.consolidated_contract_name='' or
	charindex('('+fk.consolidated_contract_name+')',pk.consolidated_contract_name )>0,
	NULL,fk.consolidated_contract_name)) as unmatched_name_count,
pk.consolidated_contract_name as PKconsolidated_contract_name,
max(iif(fk.consolidated_contract_name=pk.consolidated_contract_name or
	fk.consolidated_contract_name='' or
	charindex('('+fk.consolidated_contract_name+')',pk.consolidated_contract_name )>0,
	1,0)) as any_name_match,
'Contract.consolidatedcontract' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN Contract.consolidatedcontract as pk
On pk.consolidatedcontract=fk.[consolidated_contract]
GROUP BY fk.[consolidated_contract], pk.consolidated_contract_name
HAVING max(iif(fk.consolidated_contract_name=pk.consolidated_contract_name or
	fk.consolidated_contract_name='' or
	charindex('('+fk.consolidated_contract_name+')',pk.consolidated_contract_name )>0,
	0,1))=1
ORDER BY fk.[consolidated_contract]


--List new [construction_wage_rate_req] and updated davis_bacon_act_name for insertion into FPDSTypeTable.davisbaconact
SELECT fk.[construction_wage_rate_req],
max(iif(fk.davis_bacon_act_name=pk.davisbaconactText or
	fk.davis_bacon_act_name='' or
	charindex('('+fk.davis_bacon_act_name+')',pk.davisbaconactText )>0,
	NULL,fk.davis_bacon_act_name)) as MaxOfNewFKdavis_bacon_act_name,
count(distinct iif(fk.davis_bacon_act_name=pk.davisbaconactText or
	fk.davis_bacon_act_name='' or
	charindex('('+fk.davis_bacon_act_name+')',pk.davisbaconactText )>0,
	NULL,fk.davis_bacon_act_name)) as unmatched_name_count,
pk.davisbaconactText as PKdavisbaconactText,
max(iif(fk.davis_bacon_act_name=pk.davisbaconactText or
	fk.davis_bacon_act_name='' or
	charindex('('+fk.davis_bacon_act_name+')',pk.davisbaconactText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.davisbaconact' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.davisbaconact as pk
On pk.davisbaconact=fk.[construction_wage_rate_req]
GROUP BY fk.[construction_wage_rate_req], pk.davisbaconactText
HAVING max(iif(fk.davis_bacon_act_name=pk.davisbaconactText or
	fk.davis_bacon_act_name='' or
	charindex('('+fk.davis_bacon_act_name+')',pk.davisbaconactText )>0,
	0,1))=1
ORDER BY fk.[construction_wage_rate_req]


--List new [contingency_humanitarian_o] and updated contingency_humanitarian_or_peacekeeping_operation_name for insertion into Assistance.ContingencyHumanitarianPeacekeepingOperation
SELECT fk.[contingency_humanitarian_o],
max(iif(fk.contingency_humanitarian_or_peacekeeping_operation_name=pk.contingencyhumanitarianpeacekeepingoperationText or
	fk.contingency_humanitarian_or_peacekeeping_operation_name='' or
	charindex('('+fk.contingency_humanitarian_or_peacekeeping_operation_name+')',pk.contingencyhumanitarianpeacekeepingoperationText )>0,
	NULL,fk.contingency_humanitarian_or_peacekeeping_operation_name)) as MaxOfNewFKcontingency_humanitarian_or_peacekeeping_operation_name,
count(distinct iif(fk.contingency_humanitarian_or_peacekeeping_operation_name=pk.contingencyhumanitarianpeacekeepingoperationText or
	fk.contingency_humanitarian_or_peacekeeping_operation_name='' or
	charindex('('+fk.contingency_humanitarian_or_peacekeeping_operation_name+')',pk.contingencyhumanitarianpeacekeepingoperationText )>0,
	NULL,fk.contingency_humanitarian_or_peacekeeping_operation_name)) as unmatched_name_count,
pk.contingencyhumanitarianpeacekeepingoperationText as PKcontingencyhumanitarianpeacekeepingoperationText,
max(iif(fk.contingency_humanitarian_or_peacekeeping_operation_name=pk.contingencyhumanitarianpeacekeepingoperationText or
	fk.contingency_humanitarian_or_peacekeeping_operation_name='' or
	charindex('('+fk.contingency_humanitarian_or_peacekeeping_operation_name+')',pk.contingencyhumanitarianpeacekeepingoperationText )>0,
	1,0)) as any_name_match,
'Assistance.ContingencyHumanitarianPeacekeepingOperation' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN Assistance.ContingencyHumanitarianPeacekeepingOperation as pk
On pk.ContingencyHumanitarianPeacekeepingOperation=fk.[contingency_humanitarian_o]
GROUP BY fk.[contingency_humanitarian_o], pk.contingencyhumanitarianpeacekeepingoperationText
HAVING max(iif(fk.contingency_humanitarian_or_peacekeeping_operation_name=pk.contingencyhumanitarianpeacekeepingoperationText or
	fk.contingency_humanitarian_or_peacekeeping_operation_name='' or
	charindex('('+fk.contingency_humanitarian_or_peacekeeping_operation_name+')',pk.contingencyhumanitarianpeacekeepingoperationText )>0,
	0,1))=1
ORDER BY fk.[contingency_humanitarian_o]


--List new [contract_award_type] and updated award_type_name for insertion into FPDSTypeTable.award_type_code
SELECT fk.[contract_award_type],
max(iif(fk.award_type_name=pk.award_type_name or
	fk.award_type_name='' or
	charindex('('+fk.award_type_name+')',pk.award_type_name )>0,
	NULL,fk.award_type_name)) as MaxOfNewFKaward_type_name,
count(distinct iif(fk.award_type_name=pk.award_type_name or
	fk.award_type_name='' or
	charindex('('+fk.award_type_name+')',pk.award_type_name )>0,
	NULL,fk.award_type_name)) as unmatched_name_count,
pk.award_type_name as PKaward_type_name,
max(iif(fk.award_type_name=pk.award_type_name or
	fk.award_type_name='' or
	charindex('('+fk.award_type_name+')',pk.award_type_name )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.award_type_code' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.award_type_code as pk
On pk.award_type_code=fk.[contract_award_type]
GROUP BY fk.[contract_award_type], pk.award_type_name
HAVING max(iif(fk.award_type_name=pk.award_type_name or
	fk.award_type_name='' or
	charindex('('+fk.award_type_name+')',pk.award_type_name )>0,
	0,1))=1
ORDER BY fk.[contract_award_type]


--List new [contract_bundling] and updated contract_bundling_name for insertion into FPDSTypeTable.contractbundling
SELECT fk.[contract_bundling],
max(iif(fk.contract_bundling_name=pk.contractbundlingText or
	fk.contract_bundling_name='' or
	charindex('('+fk.contract_bundling_name+')',pk.contractbundlingText )>0,
	NULL,fk.contract_bundling_name)) as MaxOfNewFKcontract_bundling_name,
count(distinct iif(fk.contract_bundling_name=pk.contractbundlingText or
	fk.contract_bundling_name='' or
	charindex('('+fk.contract_bundling_name+')',pk.contractbundlingText )>0,
	NULL,fk.contract_bundling_name)) as unmatched_name_count,
pk.contractbundlingText as PKcontractbundlingText,
max(iif(fk.contract_bundling_name=pk.contractbundlingText or
	fk.contract_bundling_name='' or
	charindex('('+fk.contract_bundling_name+')',pk.contractbundlingText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.contractbundling' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.contractbundling as pk
On pk.contractbundling=fk.[contract_bundling]
GROUP BY fk.[contract_bundling], pk.contractbundlingText
HAVING max(iif(fk.contract_bundling_name=pk.contractbundlingText or
	fk.contract_bundling_name='' or
	charindex('('+fk.contract_bundling_name+')',pk.contractbundlingText )>0,
	0,1))=1
ORDER BY fk.[contract_bundling]


--List new [contract_financing] and updated contract_financing_name for insertion into FPDSTypeTable.contractfinancing
SELECT fk.[contract_financing],
max(iif(fk.contract_financing_name=pk.contractfinancingText or
	fk.contract_financing_name='' or
	charindex('('+fk.contract_financing_name+')',pk.contractfinancingText )>0,
	NULL,fk.contract_financing_name)) as MaxOfNewFKcontract_financing_name,
count(distinct iif(fk.contract_financing_name=pk.contractfinancingText or
	fk.contract_financing_name='' or
	charindex('('+fk.contract_financing_name+')',pk.contractfinancingText )>0,
	NULL,fk.contract_financing_name)) as unmatched_name_count,
pk.contractfinancingText as PKcontractfinancingText,
max(iif(fk.contract_financing_name=pk.contractfinancingText or
	fk.contract_financing_name='' or
	charindex('('+fk.contract_financing_name+')',pk.contractfinancingText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.contractfinancing' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.contractfinancing as pk
On pk.contractfinancing=fk.[contract_financing]
GROUP BY fk.[contract_financing], pk.contractfinancingText
HAVING max(iif(fk.contract_financing_name=pk.contractfinancingText or
	fk.contract_financing_name='' or
	charindex('('+fk.contract_financing_name+')',pk.contractfinancingText )>0,
	0,1))=1
ORDER BY fk.[contract_financing]


--List new [contracting_officers_deter] and updated ContractingOfficerBusinessSizeDeterminationText for insertion into FPDSTypeTable.contractingofficerbusinesssizedetermination
SELECT fk.[contracting_officers_deter],
max(iif(fk.ContractingOfficerBusinessSizeDeterminationText=pk.ContractingOfficerBusinessSizeDeterminationText or
	fk.ContractingOfficerBusinessSizeDeterminationText='' or
	charindex('('+fk.ContractingOfficerBusinessSizeDeterminationText+')',pk.ContractingOfficerBusinessSizeDeterminationText )>0,
	NULL,fk.ContractingOfficerBusinessSizeDeterminationText)) as MaxOfNewFKContractingOfficerBusinessSizeDeterminationText,
count(distinct iif(fk.ContractingOfficerBusinessSizeDeterminationText=pk.ContractingOfficerBusinessSizeDeterminationText or
	fk.ContractingOfficerBusinessSizeDeterminationText='' or
	charindex('('+fk.ContractingOfficerBusinessSizeDeterminationText+')',pk.ContractingOfficerBusinessSizeDeterminationText )>0,
	NULL,fk.ContractingOfficerBusinessSizeDeterminationText)) as unmatched_name_count,
pk.ContractingOfficerBusinessSizeDeterminationText as PKContractingOfficerBusinessSizeDeterminationText,
max(iif(fk.ContractingOfficerBusinessSizeDeterminationText=pk.ContractingOfficerBusinessSizeDeterminationText or
	fk.ContractingOfficerBusinessSizeDeterminationText='' or
	charindex('('+fk.ContractingOfficerBusinessSizeDeterminationText+')',pk.ContractingOfficerBusinessSizeDeterminationText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.contractingofficerbusinesssizedetermination' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.contractingofficerbusinesssizedetermination as pk
On pk.contractingofficerbusinesssizedetermination=fk.[contracting_officers_deter]
GROUP BY fk.[contracting_officers_deter], pk.ContractingOfficerBusinessSizeDeterminationText
HAVING max(iif(fk.ContractingOfficerBusinessSizeDeterminationText=pk.ContractingOfficerBusinessSizeDeterminationText or
	fk.ContractingOfficerBusinessSizeDeterminationText='' or
	charindex('('+fk.ContractingOfficerBusinessSizeDeterminationText+')',pk.ContractingOfficerBusinessSizeDeterminationText )>0,
	0,1))=1
ORDER BY fk.[contracting_officers_deter]


--List new [cost_accounting_standards] and updated cost_accounting_standards_clause_name for insertion into FPDSTypeTable.CostAccountingStandardsClause
SELECT fk.[cost_accounting_standards],
max(iif(fk.cost_accounting_standards_clause_name=pk.cost_accounting_standards_clause_name or
	fk.cost_accounting_standards_clause_name='' or
	charindex('('+fk.cost_accounting_standards_clause_name+')',pk.cost_accounting_standards_clause_name )>0,
	NULL,fk.cost_accounting_standards_clause_name)) as MaxOfNewFKcost_accounting_standards_clause_name,
count(distinct iif(fk.cost_accounting_standards_clause_name=pk.cost_accounting_standards_clause_name or
	fk.cost_accounting_standards_clause_name='' or
	charindex('('+fk.cost_accounting_standards_clause_name+')',pk.cost_accounting_standards_clause_name )>0,
	NULL,fk.cost_accounting_standards_clause_name)) as unmatched_name_count,
pk.cost_accounting_standards_clause_name as PKcost_accounting_standards_clause_name,
max(iif(fk.cost_accounting_standards_clause_name=pk.cost_accounting_standards_clause_name or
	fk.cost_accounting_standards_clause_name='' or
	charindex('('+fk.cost_accounting_standards_clause_name+')',pk.cost_accounting_standards_clause_name )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.CostAccountingStandardsClause' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.CostAccountingStandardsClause as pk
On pk.CostAccountingStandardsClause=fk.[cost_accounting_standards]
GROUP BY fk.[cost_accounting_standards], pk.cost_accounting_standards_clause_name
HAVING max(iif(fk.cost_accounting_standards_clause_name=pk.cost_accounting_standards_clause_name or
	fk.cost_accounting_standards_clause_name='' or
	charindex('('+fk.cost_accounting_standards_clause_name+')',pk.cost_accounting_standards_clause_name )>0,
	0,1))=1
ORDER BY fk.[cost_accounting_standards]


--List new [cost_or_pricing_data] and updated cost_or_pricing_data_name for insertion into FPDSTypeTable.costorpricingdata
SELECT fk.[cost_or_pricing_data],
max(iif(fk.cost_or_pricing_data_name=pk.costorpricingdataText or
	fk.cost_or_pricing_data_name='' or
	charindex('('+fk.cost_or_pricing_data_name+')',pk.costorpricingdataText )>0,
	NULL,fk.cost_or_pricing_data_name)) as MaxOfNewFKcost_or_pricing_data_name,
count(distinct iif(fk.cost_or_pricing_data_name=pk.costorpricingdataText or
	fk.cost_or_pricing_data_name='' or
	charindex('('+fk.cost_or_pricing_data_name+')',pk.costorpricingdataText )>0,
	NULL,fk.cost_or_pricing_data_name)) as unmatched_name_count,
pk.costorpricingdataText as PKcostorpricingdataText,
max(iif(fk.cost_or_pricing_data_name=pk.costorpricingdataText or
	fk.cost_or_pricing_data_name='' or
	charindex('('+fk.cost_or_pricing_data_name+')',pk.costorpricingdataText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.costorpricingdata' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.costorpricingdata as pk
On pk.costorpricingdata=fk.[cost_or_pricing_data]
GROUP BY fk.[cost_or_pricing_data], pk.costorpricingdataText
HAVING max(iif(fk.cost_or_pricing_data_name=pk.costorpricingdataText or
	fk.cost_or_pricing_data_name='' or
	charindex('('+fk.cost_or_pricing_data_name+')',pk.costorpricingdataText )>0,
	0,1))=1
ORDER BY fk.[cost_or_pricing_data]


--List new [country_of_product_or_serv] and updated country_of_product_or_service_origin_name for insertion into FPDSTypeTable.Country3LetterCode
SELECT fk.[country_of_product_or_serv],
max(iif(fk.country_of_product_or_service_origin_name=pk.Country3LetterCodeText or
	fk.country_of_product_or_service_origin_name='' or
	charindex('('+fk.country_of_product_or_service_origin_name+')',pk.Country3LetterCodeText )>0,
	NULL,fk.country_of_product_or_service_origin_name)) as MaxOfNewFKcountry_of_product_or_service_origin_name,
count(distinct iif(fk.country_of_product_or_service_origin_name=pk.Country3LetterCodeText or
	fk.country_of_product_or_service_origin_name='' or
	charindex('('+fk.country_of_product_or_service_origin_name+')',pk.Country3LetterCodeText )>0,
	NULL,fk.country_of_product_or_service_origin_name)) as unmatched_name_count,
pk.Country3LetterCodeText as PKCountry3LetterCodeText,
max(iif(fk.country_of_product_or_service_origin_name=pk.Country3LetterCodeText or
	fk.country_of_product_or_service_origin_name='' or
	charindex('('+fk.country_of_product_or_service_origin_name+')',pk.Country3LetterCodeText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.Country3LetterCode' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.Country3LetterCode as pk
On pk.Country3LetterCode=fk.[country_of_product_or_serv]
GROUP BY fk.[country_of_product_or_serv], pk.Country3LetterCodeText
HAVING max(iif(fk.country_of_product_or_service_origin_name=pk.Country3LetterCodeText or
	fk.country_of_product_or_service_origin_name='' or
	charindex('('+fk.country_of_product_or_service_origin_name+')',pk.Country3LetterCodeText )>0,
	0,1))=1
ORDER BY fk.[country_of_product_or_serv]


--List new [division_name] for insertion into Vendor.VendorName
SELECT fk.[division_name],
'Vendor.VendorName' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN Vendor.VendorName as pk
On pk.vendorname=fk.[division_name]
WHERE pk.vendorname is NULL
GROUP BY fk.[division_name]
ORDER BY fk.[division_name]


--List new [dod_claimant_program_code] and updated dod_claimant_program_description for insertion into FPDSTypeTable.ClaimantProgramCode
SELECT fk.[dod_claimant_program_code],
max(iif(fk.dod_claimant_program_description=pk.ClaimantProgramCodeText or
	fk.dod_claimant_program_description='' or
	charindex('('+fk.dod_claimant_program_description+')',pk.ClaimantProgramCodeText )>0,
	NULL,fk.dod_claimant_program_description)) as MaxOfNewFKdod_claimant_program_description,
count(distinct iif(fk.dod_claimant_program_description=pk.ClaimantProgramCodeText or
	fk.dod_claimant_program_description='' or
	charindex('('+fk.dod_claimant_program_description+')',pk.ClaimantProgramCodeText )>0,
	NULL,fk.dod_claimant_program_description)) as unmatched_name_count,
pk.ClaimantProgramCodeText as PKClaimantProgramCodeText,
max(iif(fk.dod_claimant_program_description=pk.ClaimantProgramCodeText or
	fk.dod_claimant_program_description='' or
	charindex('('+fk.dod_claimant_program_description+')',pk.ClaimantProgramCodeText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.ClaimantProgramCode' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.ClaimantProgramCode as pk
On pk.ClaimantProgramCode=fk.[dod_claimant_program_code]
GROUP BY fk.[dod_claimant_program_code], pk.ClaimantProgramCodeText
HAVING max(iif(fk.dod_claimant_program_description=pk.ClaimantProgramCodeText or
	fk.dod_claimant_program_description='' or
	charindex('('+fk.dod_claimant_program_description+')',pk.ClaimantProgramCodeText )>0,
	0,1))=1
ORDER BY fk.[dod_claimant_program_code]


--List new [epa_designated_product] and updated epa_designated_product_name for insertion into FPDSTypeTable.useofepadesignatedproducts
SELECT fk.[epa_designated_product],
max(iif(fk.epa_designated_product_name=pk.useofepadesignatedproductsText or
	fk.epa_designated_product_name='' or
	charindex('('+fk.epa_designated_product_name+')',pk.useofepadesignatedproductsText )>0,
	NULL,fk.epa_designated_product_name)) as MaxOfNewFKepa_designated_product_name,
count(distinct iif(fk.epa_designated_product_name=pk.useofepadesignatedproductsText or
	fk.epa_designated_product_name='' or
	charindex('('+fk.epa_designated_product_name+')',pk.useofepadesignatedproductsText )>0,
	NULL,fk.epa_designated_product_name)) as unmatched_name_count,
pk.useofepadesignatedproductsText as PKuseofepadesignatedproductsText,
max(iif(fk.epa_designated_product_name=pk.useofepadesignatedproductsText or
	fk.epa_designated_product_name='' or
	charindex('('+fk.epa_designated_product_name+')',pk.useofepadesignatedproductsText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.useofepadesignatedproducts' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.useofepadesignatedproducts as pk
On pk.useofepadesignatedproducts=fk.[epa_designated_product]
GROUP BY fk.[epa_designated_product], pk.useofepadesignatedproductsText
HAVING max(iif(fk.epa_designated_product_name=pk.useofepadesignatedproductsText or
	fk.epa_designated_product_name='' or
	charindex('('+fk.epa_designated_product_name+')',pk.useofepadesignatedproductsText )>0,
	0,1))=1
ORDER BY fk.[epa_designated_product]


--List new [evaluated_preference] and updated evaluated_preference_name for insertion into FPDSTypeTable.evaluatedpreference
SELECT fk.[evaluated_preference],
max(iif(fk.evaluated_preference_name=pk.evaluatedpreferenceText or
	fk.evaluated_preference_name='' or
	charindex('('+fk.evaluated_preference_name+')',pk.evaluatedpreferenceText )>0,
	NULL,fk.evaluated_preference_name)) as MaxOfNewFKevaluated_preference_name,
count(distinct iif(fk.evaluated_preference_name=pk.evaluatedpreferenceText or
	fk.evaluated_preference_name='' or
	charindex('('+fk.evaluated_preference_name+')',pk.evaluatedpreferenceText )>0,
	NULL,fk.evaluated_preference_name)) as unmatched_name_count,
pk.evaluatedpreferenceText as PKevaluatedpreferenceText,
max(iif(fk.evaluated_preference_name=pk.evaluatedpreferenceText or
	fk.evaluated_preference_name='' or
	charindex('('+fk.evaluated_preference_name+')',pk.evaluatedpreferenceText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.evaluatedpreference' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.evaluatedpreference as pk
On pk.evaluatedpreference=fk.[evaluated_preference]
GROUP BY fk.[evaluated_preference], pk.evaluatedpreferenceText
HAVING max(iif(fk.evaluated_preference_name=pk.evaluatedpreferenceText or
	fk.evaluated_preference_name='' or
	charindex('('+fk.evaluated_preference_name+')',pk.evaluatedpreferenceText )>0,
	0,1))=1
ORDER BY fk.[evaluated_preference]


--List new [extent_competed] and updated extent_competed_name for insertion into FPDSTypeTable.extentcompeted
SELECT fk.[extent_competed],
max(iif(fk.extent_competed_name=pk.extentcompetedText or
	fk.extent_competed_name='' or
	charindex('('+fk.extent_competed_name+')',pk.extentcompetedText )>0,
	NULL,fk.extent_competed_name)) as MaxOfNewFKextent_competed_name,
count(distinct iif(fk.extent_competed_name=pk.extentcompetedText or
	fk.extent_competed_name='' or
	charindex('('+fk.extent_competed_name+')',pk.extentcompetedText )>0,
	NULL,fk.extent_competed_name)) as unmatched_name_count,
pk.extentcompetedText as PKextentcompetedText,
max(iif(fk.extent_competed_name=pk.extentcompetedText or
	fk.extent_competed_name='' or
	charindex('('+fk.extent_competed_name+')',pk.extentcompetedText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.extentcompeted' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.extentcompeted as pk
On pk.extentcompeted=fk.[extent_competed]
GROUP BY fk.[extent_competed], pk.extentcompetedText
HAVING max(iif(fk.extent_competed_name=pk.extentcompetedText or
	fk.extent_competed_name='' or
	charindex('('+fk.extent_competed_name+')',pk.extentcompetedText )>0,
	0,1))=1
ORDER BY fk.[extent_competed]


--List new [fair_opportunity_limited_s] and updated fair_opportunity_limited_sources_name for insertion into FPDSTypeTable.statutoryexceptiontofairopportunity
SELECT fk.[fair_opportunity_limited_s],
max(iif(fk.fair_opportunity_limited_sources_name=pk.statutoryexceptiontofairopportunityText or
	fk.fair_opportunity_limited_sources_name='' or
	charindex('('+fk.fair_opportunity_limited_sources_name+')',pk.statutoryexceptiontofairopportunityText )>0,
	NULL,fk.fair_opportunity_limited_sources_name)) as MaxOfNewFKfair_opportunity_limited_sources_name,
count(distinct iif(fk.fair_opportunity_limited_sources_name=pk.statutoryexceptiontofairopportunityText or
	fk.fair_opportunity_limited_sources_name='' or
	charindex('('+fk.fair_opportunity_limited_sources_name+')',pk.statutoryexceptiontofairopportunityText )>0,
	NULL,fk.fair_opportunity_limited_sources_name)) as unmatched_name_count,
pk.statutoryexceptiontofairopportunityText as PKstatutoryexceptiontofairopportunityText,
max(iif(fk.fair_opportunity_limited_sources_name=pk.statutoryexceptiontofairopportunityText or
	fk.fair_opportunity_limited_sources_name='' or
	charindex('('+fk.fair_opportunity_limited_sources_name+')',pk.statutoryexceptiontofairopportunityText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.statutoryexceptiontofairopportunity' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.statutoryexceptiontofairopportunity as pk
On pk.statutoryexceptiontofairopportunity=fk.[fair_opportunity_limited_s]
GROUP BY fk.[fair_opportunity_limited_s], pk.statutoryexceptiontofairopportunityText
HAVING max(iif(fk.fair_opportunity_limited_sources_name=pk.statutoryexceptiontofairopportunityText or
	fk.fair_opportunity_limited_sources_name='' or
	charindex('('+fk.fair_opportunity_limited_sources_name+')',pk.statutoryexceptiontofairopportunityText )>0,
	0,1))=1
ORDER BY fk.[fair_opportunity_limited_s]


--List new [fed_biz_opps] and updated fed_biz_opps_name for insertion into FPDSTypeTable.fedbizopps
SELECT fk.[fed_biz_opps],
max(iif(fk.fed_biz_opps_name=pk.fed_biz_opps_name or
	fk.fed_biz_opps_name='' or
	charindex('('+fk.fed_biz_opps_name+')',pk.fed_biz_opps_name )>0,
	NULL,fk.fed_biz_opps_name)) as MaxOfNewFKfed_biz_opps_name,
count(distinct iif(fk.fed_biz_opps_name=pk.fed_biz_opps_name or
	fk.fed_biz_opps_name='' or
	charindex('('+fk.fed_biz_opps_name+')',pk.fed_biz_opps_name )>0,
	NULL,fk.fed_biz_opps_name)) as unmatched_name_count,
pk.fed_biz_opps_name as PKfed_biz_opps_name,
max(iif(fk.fed_biz_opps_name=pk.fed_biz_opps_name or
	fk.fed_biz_opps_name='' or
	charindex('('+fk.fed_biz_opps_name+')',pk.fed_biz_opps_name )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.fedbizopps' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.fedbizopps as pk
On pk.fedbizopps=fk.[fed_biz_opps]
GROUP BY fk.[fed_biz_opps], pk.fed_biz_opps_name
HAVING max(iif(fk.fed_biz_opps_name=pk.fed_biz_opps_name or
	fk.fed_biz_opps_name='' or
	charindex('('+fk.fed_biz_opps_name+')',pk.fed_biz_opps_name )>0,
	0,1))=1
ORDER BY fk.[fed_biz_opps]


--List new [foreign_funding] and updated foreign_funding_description for insertion into budget.FundedByForeignEntity
SELECT fk.[foreign_funding],
max(iif(fk.foreign_funding_description=pk.foreign_funding_description or
	fk.foreign_funding_description='' or
	charindex('('+fk.foreign_funding_description+')',pk.foreign_funding_description )>0,
	NULL,fk.foreign_funding_description)) as MaxOfNewFKforeign_funding_description,
count(distinct iif(fk.foreign_funding_description=pk.foreign_funding_description or
	fk.foreign_funding_description='' or
	charindex('('+fk.foreign_funding_description+')',pk.foreign_funding_description )>0,
	NULL,fk.foreign_funding_description)) as unmatched_name_count,
pk.foreign_funding_description as PKforeign_funding_description,
max(iif(fk.foreign_funding_description=pk.foreign_funding_description or
	fk.foreign_funding_description='' or
	charindex('('+fk.foreign_funding_description+')',pk.foreign_funding_description )>0,
	1,0)) as any_name_match,
'budget.FundedByForeignEntity' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN budget.FundedByForeignEntity as pk
On pk.fundedbyforeignentity=fk.[foreign_funding]
GROUP BY fk.[foreign_funding], pk.foreign_funding_description
HAVING max(iif(fk.foreign_funding_description=pk.foreign_funding_description or
	fk.foreign_funding_description='' or
	charindex('('+fk.foreign_funding_description+')',pk.foreign_funding_description )>0,
	0,1))=1
ORDER BY fk.[foreign_funding]


--List new [funding_agency_code] and updated funding_agency_name for insertion into FPDSTypeTable.AgencyID
SELECT fk.[funding_agency_code],
max(iif(fk.funding_agency_name=pk.AgencyIDtext or
	fk.funding_agency_name='' or
	charindex('('+fk.funding_agency_name+')',pk.AgencyIDtext )>0,
	NULL,fk.funding_agency_name)) as MaxOfNewFKfunding_agency_name,
count(distinct iif(fk.funding_agency_name=pk.AgencyIDtext or
	fk.funding_agency_name='' or
	charindex('('+fk.funding_agency_name+')',pk.AgencyIDtext )>0,
	NULL,fk.funding_agency_name)) as unmatched_name_count,
pk.AgencyIDtext as PKAgencyIDtext,
max(iif(fk.funding_agency_name=pk.AgencyIDtext or
	fk.funding_agency_name='' or
	charindex('('+fk.funding_agency_name+')',pk.AgencyIDtext )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.AgencyID' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.AgencyID as pk
On pk.AgencyID=fk.[funding_agency_code]
GROUP BY fk.[funding_agency_code], pk.AgencyIDtext
HAVING max(iif(fk.funding_agency_name=pk.AgencyIDtext or
	fk.funding_agency_name='' or
	charindex('('+fk.funding_agency_name+')',pk.AgencyIDtext )>0,
	0,1))=1
ORDER BY fk.[funding_agency_code]


--List new [funding_sub_tier_agency_co] and updated funding_sub_agency_name for insertion into FPDSTypeTable.AgencyID
SELECT fk.[funding_sub_tier_agency_co],
max(iif(fk.funding_sub_agency_name=pk.AgencyIDtext or
	fk.funding_sub_agency_name='' or
	charindex('('+fk.funding_sub_agency_name+')',pk.AgencyIDtext )>0,
	NULL,fk.funding_sub_agency_name)) as MaxOfNewFKfunding_sub_agency_name,
count(distinct iif(fk.funding_sub_agency_name=pk.AgencyIDtext or
	fk.funding_sub_agency_name='' or
	charindex('('+fk.funding_sub_agency_name+')',pk.AgencyIDtext )>0,
	NULL,fk.funding_sub_agency_name)) as unmatched_name_count,
pk.AgencyIDtext as PKAgencyIDtext,
max(iif(fk.funding_sub_agency_name=pk.AgencyIDtext or
	fk.funding_sub_agency_name='' or
	charindex('('+fk.funding_sub_agency_name+')',pk.AgencyIDtext )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.AgencyID' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.AgencyID as pk
On pk.AgencyID=fk.[funding_sub_tier_agency_co]
GROUP BY fk.[funding_sub_tier_agency_co], pk.AgencyIDtext
HAVING max(iif(fk.funding_sub_agency_name=pk.AgencyIDtext or
	fk.funding_sub_agency_name='' or
	charindex('('+fk.funding_sub_agency_name+')',pk.AgencyIDtext )>0,
	0,1))=1
ORDER BY fk.[funding_sub_tier_agency_co]


--List new [government_furnished_prope] and updated gfe_gfp_name for insertion into FPDSTypeTable.gfe_gfp
SELECT fk.[government_furnished_prope],
max(iif(fk.gfe_gfp_name=pk.gfe_gfpText or
	fk.gfe_gfp_name='' or
	charindex('('+fk.gfe_gfp_name+')',pk.gfe_gfpText )>0,
	NULL,fk.gfe_gfp_name)) as MaxOfNewFKgfe_gfp_name,
count(distinct iif(fk.gfe_gfp_name=pk.gfe_gfpText or
	fk.gfe_gfp_name='' or
	charindex('('+fk.gfe_gfp_name+')',pk.gfe_gfpText )>0,
	NULL,fk.gfe_gfp_name)) as unmatched_name_count,
pk.gfe_gfpText as PKgfe_gfpText,
max(iif(fk.gfe_gfp_name=pk.gfe_gfpText or
	fk.gfe_gfp_name='' or
	charindex('('+fk.gfe_gfp_name+')',pk.gfe_gfpText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.gfe_gfp' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.gfe_gfp as pk
On pk.gfe_gfp=fk.[government_furnished_prope]
GROUP BY fk.[government_furnished_prope], pk.gfe_gfpText
HAVING max(iif(fk.gfe_gfp_name=pk.gfe_gfpText or
	fk.gfe_gfp_name='' or
	charindex('('+fk.gfe_gfp_name+')',pk.gfe_gfpText )>0,
	0,1))=1
ORDER BY fk.[government_furnished_prope]


--List new [idv_type] and updated idv_type_name for insertion into FPDSTypeTable.idv_type_code
SELECT fk.[idv_type],
max(iif(fk.idv_type_name=pk.idv_type_name or
	fk.idv_type_name='' or
	charindex('('+fk.idv_type_name+')',pk.idv_type_name )>0,
	NULL,fk.idv_type_name)) as MaxOfNewFKidv_type_name,
count(distinct iif(fk.idv_type_name=pk.idv_type_name or
	fk.idv_type_name='' or
	charindex('('+fk.idv_type_name+')',pk.idv_type_name )>0,
	NULL,fk.idv_type_name)) as unmatched_name_count,
pk.idv_type_name as PKidv_type_name,
max(iif(fk.idv_type_name=pk.idv_type_name or
	fk.idv_type_name='' or
	charindex('('+fk.idv_type_name+')',pk.idv_type_name )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.idv_type_code' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.idv_type_code as pk
On pk.idv_type_code=fk.[idv_type]
GROUP BY fk.[idv_type], pk.idv_type_name
HAVING max(iif(fk.idv_type_name=pk.idv_type_name or
	fk.idv_type_name='' or
	charindex('('+fk.idv_type_name+')',pk.idv_type_name )>0,
	0,1))=1
ORDER BY fk.[idv_type]


--List new [information_technology_com] and updated information_technology_commercial_item_category_name for insertion into FPDSTypeTable.informationtechnologycommercialitemcategory
SELECT fk.[information_technology_com],
max(iif(fk.information_technology_commercial_item_category_name=pk.informationtechnologycommercialitemcategoryText or
	fk.information_technology_commercial_item_category_name='' or
	charindex('('+fk.information_technology_commercial_item_category_name+')',pk.informationtechnologycommercialitemcategoryText )>0,
	NULL,fk.information_technology_commercial_item_category_name)) as MaxOfNewFKinformation_technology_commercial_item_category_name,
count(distinct iif(fk.information_technology_commercial_item_category_name=pk.informationtechnologycommercialitemcategoryText or
	fk.information_technology_commercial_item_category_name='' or
	charindex('('+fk.information_technology_commercial_item_category_name+')',pk.informationtechnologycommercialitemcategoryText )>0,
	NULL,fk.information_technology_commercial_item_category_name)) as unmatched_name_count,
pk.informationtechnologycommercialitemcategoryText as PKinformationtechnologycommercialitemcategoryText,
max(iif(fk.information_technology_commercial_item_category_name=pk.informationtechnologycommercialitemcategoryText or
	fk.information_technology_commercial_item_category_name='' or
	charindex('('+fk.information_technology_commercial_item_category_name+')',pk.informationtechnologycommercialitemcategoryText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.informationtechnologycommercialitemcategory' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.informationtechnologycommercialitemcategory as pk
On pk.informationtechnologycommercialitemcategory=fk.[information_technology_com]
GROUP BY fk.[information_technology_com], pk.informationtechnologycommercialitemcategoryText
HAVING max(iif(fk.information_technology_commercial_item_category_name=pk.informationtechnologycommercialitemcategoryText or
	fk.information_technology_commercial_item_category_name='' or
	charindex('('+fk.information_technology_commercial_item_category_name+')',pk.informationtechnologycommercialitemcategoryText )>0,
	0,1))=1
ORDER BY fk.[information_technology_com]


--List new [inherently_government_func] and updated inherently_governmental_functions_description for insertion into ProductOrServiceCode.inherently_governmental_functions
SELECT fk.[inherently_government_func],
max(iif(fk.inherently_governmental_functions_description=pk.inherently_governmental_functions_description or
	fk.inherently_governmental_functions_description='' or
	charindex('('+fk.inherently_governmental_functions_description+')',pk.inherently_governmental_functions_description )>0,
	NULL,fk.inherently_governmental_functions_description)) as MaxOfNewFKinherently_governmental_functions_description,
count(distinct iif(fk.inherently_governmental_functions_description=pk.inherently_governmental_functions_description or
	fk.inherently_governmental_functions_description='' or
	charindex('('+fk.inherently_governmental_functions_description+')',pk.inherently_governmental_functions_description )>0,
	NULL,fk.inherently_governmental_functions_description)) as unmatched_name_count,
pk.inherently_governmental_functions_description as PKinherently_governmental_functions_description,
max(iif(fk.inherently_governmental_functions_description=pk.inherently_governmental_functions_description or
	fk.inherently_governmental_functions_description='' or
	charindex('('+fk.inherently_governmental_functions_description+')',pk.inherently_governmental_functions_description )>0,
	1,0)) as any_name_match,
'ProductOrServiceCode.inherently_governmental_functions' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN ProductOrServiceCode.inherently_governmental_functions as pk
On pk.inherently_governmental_functions=fk.[inherently_government_func]
GROUP BY fk.[inherently_government_func], pk.inherently_governmental_functions_description
HAVING max(iif(fk.inherently_governmental_functions_description=pk.inherently_governmental_functions_description or
	fk.inherently_governmental_functions_description='' or
	charindex('('+fk.inherently_governmental_functions_description+')',pk.inherently_governmental_functions_description )>0,
	0,1))=1
ORDER BY fk.[inherently_government_func]


--List new [interagency_contracting_au] and updated interagency_contracting_authority_name for insertion into FPDSTypeTable.interagencycontractingauthority
SELECT fk.[interagency_contracting_au],
max(iif(fk.interagency_contracting_authority_name=pk.interagencycontractingauthorityText or
	fk.interagency_contracting_authority_name='' or
	charindex('('+fk.interagency_contracting_authority_name+')',pk.interagencycontractingauthorityText )>0,
	NULL,fk.interagency_contracting_authority_name)) as MaxOfNewFKinteragency_contracting_authority_name,
count(distinct iif(fk.interagency_contracting_authority_name=pk.interagencycontractingauthorityText or
	fk.interagency_contracting_authority_name='' or
	charindex('('+fk.interagency_contracting_authority_name+')',pk.interagencycontractingauthorityText )>0,
	NULL,fk.interagency_contracting_authority_name)) as unmatched_name_count,
pk.interagencycontractingauthorityText as PKinteragencycontractingauthorityText,
max(iif(fk.interagency_contracting_authority_name=pk.interagencycontractingauthorityText or
	fk.interagency_contracting_authority_name='' or
	charindex('('+fk.interagency_contracting_authority_name+')',pk.interagencycontractingauthorityText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.interagencycontractingauthority' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.interagencycontractingauthority as pk
On pk.interagencycontractingauthority=fk.[interagency_contracting_au]
GROUP BY fk.[interagency_contracting_au], pk.interagencycontractingauthorityText
HAVING max(iif(fk.interagency_contracting_authority_name=pk.interagencycontractingauthorityText or
	fk.interagency_contracting_authority_name='' or
	charindex('('+fk.interagency_contracting_authority_name+')',pk.interagencycontractingauthorityText )>0,
	0,1))=1
ORDER BY fk.[interagency_contracting_au]


--List new [labor_standards] and updated service_contract_act_name for insertion into FPDSTypeTable.servicecontractact
SELECT fk.[labor_standards],
max(iif(fk.service_contract_act_name=pk.servicecontractactText or
	fk.service_contract_act_name='' or
	charindex('('+fk.service_contract_act_name+')',pk.servicecontractactText )>0,
	NULL,fk.service_contract_act_name)) as MaxOfNewFKservice_contract_act_name,
count(distinct iif(fk.service_contract_act_name=pk.servicecontractactText or
	fk.service_contract_act_name='' or
	charindex('('+fk.service_contract_act_name+')',pk.servicecontractactText )>0,
	NULL,fk.service_contract_act_name)) as unmatched_name_count,
pk.servicecontractactText as PKservicecontractactText,
max(iif(fk.service_contract_act_name=pk.servicecontractactText or
	fk.service_contract_act_name='' or
	charindex('('+fk.service_contract_act_name+')',pk.servicecontractactText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.servicecontractact' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.servicecontractact as pk
On pk.servicecontractact=fk.[labor_standards]
GROUP BY fk.[labor_standards], pk.servicecontractactText
HAVING max(iif(fk.service_contract_act_name=pk.servicecontractactText or
	fk.service_contract_act_name='' or
	charindex('('+fk.service_contract_act_name+')',pk.servicecontractactText )>0,
	0,1))=1
ORDER BY fk.[labor_standards]


--List new [legal_entity_county_code] for insertion into Location.County_FIPS_Code
SELECT fk.[legal_entity_county_code],
'Location.County_FIPS_Code' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN Location.County_FIPS_Code as pk
On pk.county_fips_code=fk.[legal_entity_county_code]
WHERE pk.county_fips_code is NULL
GROUP BY fk.[legal_entity_county_code]
ORDER BY fk.[legal_entity_county_code]


--List new [legal_entity_state_code] and updated recipient_state_name for insertion into Location.recipient_state_code
SELECT fk.[legal_entity_state_code],
max(iif(fk.recipient_state_name=pk.recipient_state_name or
	fk.recipient_state_name='' or
	charindex('('+fk.recipient_state_name+')',pk.recipient_state_name )>0,
	NULL,fk.recipient_state_name)) as MaxOfNewFKrecipient_state_name,
count(distinct iif(fk.recipient_state_name=pk.recipient_state_name or
	fk.recipient_state_name='' or
	charindex('('+fk.recipient_state_name+')',pk.recipient_state_name )>0,
	NULL,fk.recipient_state_name)) as unmatched_name_count,
pk.recipient_state_name as PKrecipient_state_name,
max(iif(fk.recipient_state_name=pk.recipient_state_name or
	fk.recipient_state_name='' or
	charindex('('+fk.recipient_state_name+')',pk.recipient_state_name )>0,
	1,0)) as any_name_match,
'Location.recipient_state_code' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN Location.recipient_state_code as pk
On pk.recipient_state_code=fk.[legal_entity_state_code]
GROUP BY fk.[legal_entity_state_code], pk.recipient_state_name
HAVING max(iif(fk.recipient_state_name=pk.recipient_state_name or
	fk.recipient_state_name='' or
	charindex('('+fk.recipient_state_name+')',pk.recipient_state_name )>0,
	0,1))=1
ORDER BY fk.[legal_entity_state_code]


--List new [local_area_set_aside] and updated local_area_set_aside_name for insertion into Location.localareasetaside
SELECT fk.[local_area_set_aside],
max(iif(fk.local_area_set_aside_name=pk.local_area_set_aside_name or
	fk.local_area_set_aside_name='' or
	charindex('('+fk.local_area_set_aside_name+')',pk.local_area_set_aside_name )>0,
	NULL,fk.local_area_set_aside_name)) as MaxOfNewFKlocal_area_set_aside_name,
count(distinct iif(fk.local_area_set_aside_name=pk.local_area_set_aside_name or
	fk.local_area_set_aside_name='' or
	charindex('('+fk.local_area_set_aside_name+')',pk.local_area_set_aside_name )>0,
	NULL,fk.local_area_set_aside_name)) as unmatched_name_count,
pk.local_area_set_aside_name as PKlocal_area_set_aside_name,
max(iif(fk.local_area_set_aside_name=pk.local_area_set_aside_name or
	fk.local_area_set_aside_name='' or
	charindex('('+fk.local_area_set_aside_name+')',pk.local_area_set_aside_name )>0,
	1,0)) as any_name_match,
'Location.localareasetaside' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN Location.localareasetaside as pk
On pk.localareasetaside=fk.[local_area_set_aside]
GROUP BY fk.[local_area_set_aside], pk.local_area_set_aside_name
HAVING max(iif(fk.local_area_set_aside_name=pk.local_area_set_aside_name or
	fk.local_area_set_aside_name='' or
	charindex('('+fk.local_area_set_aside_name+')',pk.local_area_set_aside_name )>0,
	0,1))=1
ORDER BY fk.[local_area_set_aside]


--List new [major_program] for insertion into Contract.MajorProgramCode
SELECT fk.[major_program],
'Contract.MajorProgramCode' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN Contract.MajorProgramCode as pk
On pk.majorprogramcode=fk.[major_program]
WHERE pk.majorprogramcode is NULL
GROUP BY fk.[major_program]
ORDER BY fk.[major_program]


--List new [materials_supplies_article] and updated walsh_healey_act_name for insertion into FPDSTypeTable.walshhealyact
SELECT fk.[materials_supplies_article],
max(iif(fk.walsh_healey_act_name=pk.walshhealyactText or
	fk.walsh_healey_act_name='' or
	charindex('('+fk.walsh_healey_act_name+')',pk.walshhealyactText )>0,
	NULL,fk.walsh_healey_act_name)) as MaxOfNewFKwalsh_healey_act_name,
count(distinct iif(fk.walsh_healey_act_name=pk.walshhealyactText or
	fk.walsh_healey_act_name='' or
	charindex('('+fk.walsh_healey_act_name+')',pk.walshhealyactText )>0,
	NULL,fk.walsh_healey_act_name)) as unmatched_name_count,
pk.walshhealyactText as PKwalshhealyactText,
max(iif(fk.walsh_healey_act_name=pk.walshhealyactText or
	fk.walsh_healey_act_name='' or
	charindex('('+fk.walsh_healey_act_name+')',pk.walshhealyactText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.walshhealyact' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.walshhealyact as pk
On pk.walshhealyact=fk.[materials_supplies_article]
GROUP BY fk.[materials_supplies_article], pk.walshhealyactText
HAVING max(iif(fk.walsh_healey_act_name=pk.walshhealyactText or
	fk.walsh_healey_act_name='' or
	charindex('('+fk.walsh_healey_act_name+')',pk.walshhealyactText )>0,
	0,1))=1
ORDER BY fk.[materials_supplies_article]


--List new [multiple_or_single_award_i] and updated multiple_or_single_award_idv_name for insertion into FPDSTypeTable.multipleorsingleawardidc
SELECT fk.[multiple_or_single_award_i],
max(iif(fk.multiple_or_single_award_idv_name=pk.multipleorsingleawardidcText or
	fk.multiple_or_single_award_idv_name='' or
	charindex('('+fk.multiple_or_single_award_idv_name+')',pk.multipleorsingleawardidcText )>0,
	NULL,fk.multiple_or_single_award_idv_name)) as MaxOfNewFKmultiple_or_single_award_idv_name,
count(distinct iif(fk.multiple_or_single_award_idv_name=pk.multipleorsingleawardidcText or
	fk.multiple_or_single_award_idv_name='' or
	charindex('('+fk.multiple_or_single_award_idv_name+')',pk.multipleorsingleawardidcText )>0,
	NULL,fk.multiple_or_single_award_idv_name)) as unmatched_name_count,
pk.multipleorsingleawardidcText as PKmultipleorsingleawardidcText,
max(iif(fk.multiple_or_single_award_idv_name=pk.multipleorsingleawardidcText or
	fk.multiple_or_single_award_idv_name='' or
	charindex('('+fk.multiple_or_single_award_idv_name+')',pk.multipleorsingleawardidcText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.multipleorsingleawardidc' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.multipleorsingleawardidc as pk
On pk.multipleorsingleawardidc=fk.[multiple_or_single_award_i]
GROUP BY fk.[multiple_or_single_award_i], pk.multipleorsingleawardidcText
HAVING max(iif(fk.multiple_or_single_award_idv_name=pk.multipleorsingleawardidcText or
	fk.multiple_or_single_award_idv_name='' or
	charindex('('+fk.multiple_or_single_award_idv_name+')',pk.multipleorsingleawardidcText )>0,
	0,1))=1
ORDER BY fk.[multiple_or_single_award_i]


--List new [naics] and updated naics_description for insertion into FPDSTypeTable.PrincipalNaicsCode
SELECT fk.[naics],
max(iif(fk.naics_description=pk.principalnaicscodeText or
	fk.naics_description='' or
	charindex('('+fk.naics_description+')',pk.principalnaicscodeText )>0,
	NULL,fk.naics_description)) as MaxOfNewFKnaics_description,
count(distinct iif(fk.naics_description=pk.principalnaicscodeText or
	fk.naics_description='' or
	charindex('('+fk.naics_description+')',pk.principalnaicscodeText )>0,
	NULL,fk.naics_description)) as unmatched_name_count,
pk.principalnaicscodeText as PKprincipalnaicscodeText,
max(iif(fk.naics_description=pk.principalnaicscodeText or
	fk.naics_description='' or
	charindex('('+fk.naics_description+')',pk.principalnaicscodeText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.PrincipalNaicsCode' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.PrincipalNaicsCode as pk
On pk.principalnaicscode=fk.[naics]
GROUP BY fk.[naics], pk.principalnaicscodeText
HAVING max(iif(fk.naics_description=pk.principalnaicscodeText or
	fk.naics_description='' or
	charindex('('+fk.naics_description+')',pk.principalnaicscodeText )>0,
	0,1))=1
ORDER BY fk.[naics]


--List new [national_interest_action] and updated national_interest_action_name for insertion into Assistance.NationalInterestActionCode
SELECT fk.[national_interest_action],
max(iif(fk.national_interest_action_name=pk.National_Interest_Action_Name or
	fk.national_interest_action_name='' or
	charindex('('+fk.national_interest_action_name+')',pk.National_Interest_Action_Name )>0,
	NULL,fk.national_interest_action_name)) as MaxOfNewFKnational_interest_action_name,
count(distinct iif(fk.national_interest_action_name=pk.National_Interest_Action_Name or
	fk.national_interest_action_name='' or
	charindex('('+fk.national_interest_action_name+')',pk.National_Interest_Action_Name )>0,
	NULL,fk.national_interest_action_name)) as unmatched_name_count,
pk.National_Interest_Action_Name as PKNational_Interest_Action_Name,
max(iif(fk.national_interest_action_name=pk.National_Interest_Action_Name or
	fk.national_interest_action_name='' or
	charindex('('+fk.national_interest_action_name+')',pk.National_Interest_Action_Name )>0,
	1,0)) as any_name_match,
'Assistance.NationalInterestActionCode' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN Assistance.NationalInterestActionCode as pk
On pk.NationalInterestActionCode=fk.[national_interest_action]
GROUP BY fk.[national_interest_action], pk.National_Interest_Action_Name
HAVING max(iif(fk.national_interest_action_name=pk.National_Interest_Action_Name or
	fk.national_interest_action_name='' or
	charindex('('+fk.national_interest_action_name+')',pk.National_Interest_Action_Name )>0,
	0,1))=1
ORDER BY fk.[national_interest_action]


--List new [organizational_type] for insertion into Vendor.OrganizationalType
SELECT fk.[organizational_type],
'Vendor.OrganizationalType' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN Vendor.OrganizationalType as pk
On pk.OrganizationalType=fk.[organizational_type]
WHERE pk.OrganizationalType is NULL
GROUP BY fk.[organizational_type]
ORDER BY fk.[organizational_type]


--List new [other_than_full_and_open_c] and updated other_than_full_and_open_competition_name for insertion into FPDSTypeTable.reasonnotcompeted
SELECT fk.[other_than_full_and_open_c],
max(iif(fk.other_than_full_and_open_competition_name=pk.reasonnotcompetedText or
	fk.other_than_full_and_open_competition_name='' or
	charindex('('+fk.other_than_full_and_open_competition_name+')',pk.reasonnotcompetedText )>0,
	NULL,fk.other_than_full_and_open_competition_name)) as MaxOfNewFKother_than_full_and_open_competition_name,
count(distinct iif(fk.other_than_full_and_open_competition_name=pk.reasonnotcompetedText or
	fk.other_than_full_and_open_competition_name='' or
	charindex('('+fk.other_than_full_and_open_competition_name+')',pk.reasonnotcompetedText )>0,
	NULL,fk.other_than_full_and_open_competition_name)) as unmatched_name_count,
pk.reasonnotcompetedText as PKreasonnotcompetedText,
max(iif(fk.other_than_full_and_open_competition_name=pk.reasonnotcompetedText or
	fk.other_than_full_and_open_competition_name='' or
	charindex('('+fk.other_than_full_and_open_competition_name+')',pk.reasonnotcompetedText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.reasonnotcompeted' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.reasonnotcompeted as pk
On pk.reasonnotcompeted=fk.[other_than_full_and_open_c]
GROUP BY fk.[other_than_full_and_open_c], pk.reasonnotcompetedText
HAVING max(iif(fk.other_than_full_and_open_competition_name=pk.reasonnotcompetedText or
	fk.other_than_full_and_open_competition_name='' or
	charindex('('+fk.other_than_full_and_open_competition_name+')',pk.reasonnotcompetedText )>0,
	0,1))=1
ORDER BY fk.[other_than_full_and_open_c]


--List new [performance_based_service] and updated performance_based_service_acquisition_name for insertion into FPDSTypeTable.PerformanceBasedServiceContract
SELECT fk.[performance_based_service],
max(iif(fk.performance_based_service_acquisition_name=pk.performancebasedservicecontractText or
	fk.performance_based_service_acquisition_name='' or
	charindex('('+fk.performance_based_service_acquisition_name+')',pk.performancebasedservicecontractText )>0,
	NULL,fk.performance_based_service_acquisition_name)) as MaxOfNewFKperformance_based_service_acquisition_name,
count(distinct iif(fk.performance_based_service_acquisition_name=pk.performancebasedservicecontractText or
	fk.performance_based_service_acquisition_name='' or
	charindex('('+fk.performance_based_service_acquisition_name+')',pk.performancebasedservicecontractText )>0,
	NULL,fk.performance_based_service_acquisition_name)) as unmatched_name_count,
pk.performancebasedservicecontractText as PKperformancebasedservicecontractText,
max(iif(fk.performance_based_service_acquisition_name=pk.performancebasedservicecontractText or
	fk.performance_based_service_acquisition_name='' or
	charindex('('+fk.performance_based_service_acquisition_name+')',pk.performancebasedservicecontractText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.PerformanceBasedServiceContract' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.PerformanceBasedServiceContract as pk
On pk.performancebasedservicecontract=fk.[performance_based_service]
GROUP BY fk.[performance_based_service], pk.performancebasedservicecontractText
HAVING max(iif(fk.performance_based_service_acquisition_name=pk.performancebasedservicecontractText or
	fk.performance_based_service_acquisition_name='' or
	charindex('('+fk.performance_based_service_acquisition_name+')',pk.performancebasedservicecontractText )>0,
	0,1))=1
ORDER BY fk.[performance_based_service]


--List new [place_of_manufacture] and updated place_of_manufacture_name for insertion into FPDSTypeTable.PlaceOfManufacture
SELECT fk.[place_of_manufacture],
max(iif(fk.place_of_manufacture_name=pk.PlaceOfManufactureText or
	fk.place_of_manufacture_name='' or
	charindex('('+fk.place_of_manufacture_name+')',pk.PlaceOfManufactureText )>0,
	NULL,fk.place_of_manufacture_name)) as MaxOfNewFKplace_of_manufacture_name,
count(distinct iif(fk.place_of_manufacture_name=pk.PlaceOfManufactureText or
	fk.place_of_manufacture_name='' or
	charindex('('+fk.place_of_manufacture_name+')',pk.PlaceOfManufactureText )>0,
	NULL,fk.place_of_manufacture_name)) as unmatched_name_count,
pk.PlaceOfManufactureText as PKPlaceOfManufactureText,
max(iif(fk.place_of_manufacture_name=pk.PlaceOfManufactureText or
	fk.place_of_manufacture_name='' or
	charindex('('+fk.place_of_manufacture_name+')',pk.PlaceOfManufactureText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.PlaceOfManufacture' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.PlaceOfManufacture as pk
On pk.PlaceOfManufacture=fk.[place_of_manufacture]
GROUP BY fk.[place_of_manufacture], pk.PlaceOfManufactureText
HAVING max(iif(fk.place_of_manufacture_name=pk.PlaceOfManufactureText or
	fk.place_of_manufacture_name='' or
	charindex('('+fk.place_of_manufacture_name+')',pk.PlaceOfManufactureText )>0,
	0,1))=1
ORDER BY fk.[place_of_manufacture]


--List new [place_of_perform_country_c] and updated primary_place_of_performance_country_name for insertion into FPDSTypeTable.Country3LetterCode
SELECT fk.[place_of_perform_country_c],
max(iif(fk.primary_place_of_performance_country_name=pk.Country3LetterCodeText or
	fk.primary_place_of_performance_country_name='' or
	charindex('('+fk.primary_place_of_performance_country_name+')',pk.Country3LetterCodeText )>0,
	NULL,fk.primary_place_of_performance_country_name)) as MaxOfNewFKprimary_place_of_performance_country_name,
count(distinct iif(fk.primary_place_of_performance_country_name=pk.Country3LetterCodeText or
	fk.primary_place_of_performance_country_name='' or
	charindex('('+fk.primary_place_of_performance_country_name+')',pk.Country3LetterCodeText )>0,
	NULL,fk.primary_place_of_performance_country_name)) as unmatched_name_count,
pk.Country3LetterCodeText as PKCountry3LetterCodeText,
max(iif(fk.primary_place_of_performance_country_name=pk.Country3LetterCodeText or
	fk.primary_place_of_performance_country_name='' or
	charindex('('+fk.primary_place_of_performance_country_name+')',pk.Country3LetterCodeText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.Country3LetterCode' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.Country3LetterCode as pk
On pk.Country3LetterCode=fk.[place_of_perform_country_c]
GROUP BY fk.[place_of_perform_country_c], pk.Country3LetterCodeText
HAVING max(iif(fk.primary_place_of_performance_country_name=pk.Country3LetterCodeText or
	fk.primary_place_of_performance_country_name='' or
	charindex('('+fk.primary_place_of_performance_country_name+')',pk.Country3LetterCodeText )>0,
	0,1))=1
ORDER BY fk.[place_of_perform_country_c]


--List new [place_of_perform_county_co] for insertion into Location.County_FIPS_Code
SELECT fk.[place_of_perform_county_co],
'Location.County_FIPS_Code' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN Location.County_FIPS_Code as pk
On pk.county_fips_code=fk.[place_of_perform_county_co]
WHERE pk.county_fips_code is NULL
GROUP BY fk.[place_of_perform_county_co]
ORDER BY fk.[place_of_perform_county_co]


--List new [place_of_performance_state] and updated primary_place_of_performance_state_name for insertion into FPDSTypeTable.statecode
SELECT fk.[place_of_performance_state],
max(iif(fk.primary_place_of_performance_state_name=pk.statecodeText or
	fk.primary_place_of_performance_state_name='' or
	charindex('('+fk.primary_place_of_performance_state_name+')',pk.statecodeText )>0,
	NULL,fk.primary_place_of_performance_state_name)) as MaxOfNewFKprimary_place_of_performance_state_name,
count(distinct iif(fk.primary_place_of_performance_state_name=pk.statecodeText or
	fk.primary_place_of_performance_state_name='' or
	charindex('('+fk.primary_place_of_performance_state_name+')',pk.statecodeText )>0,
	NULL,fk.primary_place_of_performance_state_name)) as unmatched_name_count,
pk.statecodeText as PKstatecodeText,
max(iif(fk.primary_place_of_performance_state_name=pk.statecodeText or
	fk.primary_place_of_performance_state_name='' or
	charindex('('+fk.primary_place_of_performance_state_name+')',pk.statecodeText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.statecode' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.statecode as pk
On pk.statecode=fk.[place_of_performance_state]
GROUP BY fk.[place_of_performance_state], pk.statecodeText
HAVING max(iif(fk.primary_place_of_performance_state_name=pk.statecodeText or
	fk.primary_place_of_performance_state_name='' or
	charindex('('+fk.primary_place_of_performance_state_name+')',pk.statecodeText )>0,
	0,1))=1
ORDER BY fk.[place_of_performance_state]


--List new [product_or_service_code] and updated product_or_service_code_description for insertion into FPDSTypeTable.ProductOrServiceCode
SELECT fk.[product_or_service_code],
max(iif(fk.product_or_service_code_description=pk.ProductOrServiceCodeText or
	fk.product_or_service_code_description='' or
	charindex('('+fk.product_or_service_code_description+')',pk.ProductOrServiceCodeText )>0,
	NULL,fk.product_or_service_code_description)) as MaxOfNewFKproduct_or_service_code_description,
count(distinct iif(fk.product_or_service_code_description=pk.ProductOrServiceCodeText or
	fk.product_or_service_code_description='' or
	charindex('('+fk.product_or_service_code_description+')',pk.ProductOrServiceCodeText )>0,
	NULL,fk.product_or_service_code_description)) as unmatched_name_count,
pk.ProductOrServiceCodeText as PKProductOrServiceCodeText,
max(iif(fk.product_or_service_code_description=pk.ProductOrServiceCodeText or
	fk.product_or_service_code_description='' or
	charindex('('+fk.product_or_service_code_description+')',pk.ProductOrServiceCodeText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.ProductOrServiceCode' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.ProductOrServiceCode as pk
On pk.ProductOrServiceCode=fk.[product_or_service_code]
GROUP BY fk.[product_or_service_code], pk.ProductOrServiceCodeText
HAVING max(iif(fk.product_or_service_code_description=pk.ProductOrServiceCodeText or
	fk.product_or_service_code_description='' or
	charindex('('+fk.product_or_service_code_description+')',pk.ProductOrServiceCodeText )>0,
	0,1))=1
ORDER BY fk.[product_or_service_code]


--List new [program_system_or_equipmen] and updated dod_acquisition_program_description for insertion into Project.SystemEquipmentCode
SELECT fk.[program_system_or_equipmen],
max(iif(fk.dod_acquisition_program_description=pk.systemequipmentcodeText or
	fk.dod_acquisition_program_description='' or
	charindex('('+fk.dod_acquisition_program_description+')',pk.systemequipmentcodeText )>0,
	NULL,fk.dod_acquisition_program_description)) as MaxOfNewFKdod_acquisition_program_description,
count(distinct iif(fk.dod_acquisition_program_description=pk.systemequipmentcodeText or
	fk.dod_acquisition_program_description='' or
	charindex('('+fk.dod_acquisition_program_description+')',pk.systemequipmentcodeText )>0,
	NULL,fk.dod_acquisition_program_description)) as unmatched_name_count,
pk.systemequipmentcodeText as PKsystemequipmentcodeText,
max(iif(fk.dod_acquisition_program_description=pk.systemequipmentcodeText or
	fk.dod_acquisition_program_description='' or
	charindex('('+fk.dod_acquisition_program_description+')',pk.systemequipmentcodeText )>0,
	1,0)) as any_name_match,
'Project.SystemEquipmentCode' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN Project.SystemEquipmentCode as pk
On pk.systemequipmentcode=fk.[program_system_or_equipmen]
GROUP BY fk.[program_system_or_equipmen], pk.systemequipmentcodeText
HAVING max(iif(fk.dod_acquisition_program_description=pk.systemequipmentcodeText or
	fk.dod_acquisition_program_description='' or
	charindex('('+fk.dod_acquisition_program_description+')',pk.systemequipmentcodeText )>0,
	0,1))=1
ORDER BY fk.[program_system_or_equipmen]


--List new [recovered_materials_sustai] and updated recovered_materials_sustainability_name for insertion into FPDSTypeTable.recoveredmaterialclauses
SELECT fk.[recovered_materials_sustai],
max(iif(fk.recovered_materials_sustainability_name=pk.recoveredmaterialclausesText or
	fk.recovered_materials_sustainability_name='' or
	charindex('('+fk.recovered_materials_sustainability_name+')',pk.recoveredmaterialclausesText )>0,
	NULL,fk.recovered_materials_sustainability_name)) as MaxOfNewFKrecovered_materials_sustainability_name,
count(distinct iif(fk.recovered_materials_sustainability_name=pk.recoveredmaterialclausesText or
	fk.recovered_materials_sustainability_name='' or
	charindex('('+fk.recovered_materials_sustainability_name+')',pk.recoveredmaterialclausesText )>0,
	NULL,fk.recovered_materials_sustainability_name)) as unmatched_name_count,
pk.recoveredmaterialclausesText as PKrecoveredmaterialclausesText,
max(iif(fk.recovered_materials_sustainability_name=pk.recoveredmaterialclausesText or
	fk.recovered_materials_sustainability_name='' or
	charindex('('+fk.recovered_materials_sustainability_name+')',pk.recoveredmaterialclausesText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.recoveredmaterialclauses' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.recoveredmaterialclauses as pk
On pk.recoveredmaterialclauses=fk.[recovered_materials_sustai]
GROUP BY fk.[recovered_materials_sustai], pk.recoveredmaterialclausesText
HAVING max(iif(fk.recovered_materials_sustainability_name=pk.recoveredmaterialclausesText or
	fk.recovered_materials_sustainability_name='' or
	charindex('('+fk.recovered_materials_sustainability_name+')',pk.recoveredmaterialclausesText )>0,
	0,1))=1
ORDER BY fk.[recovered_materials_sustai]


--List new [referenced_idv_agency_iden] and updated parent_award_agency_name for insertion into FPDSTypeTable.AgencyID
SELECT fk.[referenced_idv_agency_iden],
max(iif(fk.parent_award_agency_name=pk.AgencyIDtext or
	fk.parent_award_agency_name='' or
	charindex('('+fk.parent_award_agency_name+')',pk.AgencyIDtext )>0,
	NULL,fk.parent_award_agency_name)) as MaxOfNewFKparent_award_agency_name,
count(distinct iif(fk.parent_award_agency_name=pk.AgencyIDtext or
	fk.parent_award_agency_name='' or
	charindex('('+fk.parent_award_agency_name+')',pk.AgencyIDtext )>0,
	NULL,fk.parent_award_agency_name)) as unmatched_name_count,
pk.AgencyIDtext as PKAgencyIDtext,
max(iif(fk.parent_award_agency_name=pk.AgencyIDtext or
	fk.parent_award_agency_name='' or
	charindex('('+fk.parent_award_agency_name+')',pk.AgencyIDtext )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.AgencyID' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.AgencyID as pk
On pk.AgencyID=fk.[referenced_idv_agency_iden]
GROUP BY fk.[referenced_idv_agency_iden], pk.AgencyIDtext
HAVING max(iif(fk.parent_award_agency_name=pk.AgencyIDtext or
	fk.parent_award_agency_name='' or
	charindex('('+fk.parent_award_agency_name+')',pk.AgencyIDtext )>0,
	0,1))=1
ORDER BY fk.[referenced_idv_agency_iden]


--List new [referenced_idv_type] and updated parent_award_type_name for insertion into FPDSTypeTable.idv_type_code
SELECT fk.[referenced_idv_type],
max(iif(fk.parent_award_type_name=pk.idv_type_name or
	fk.parent_award_type_name='' or
	charindex('('+fk.parent_award_type_name+')',pk.idv_type_name )>0,
	NULL,fk.parent_award_type_name)) as MaxOfNewFKparent_award_type_name,
count(distinct iif(fk.parent_award_type_name=pk.idv_type_name or
	fk.parent_award_type_name='' or
	charindex('('+fk.parent_award_type_name+')',pk.idv_type_name )>0,
	NULL,fk.parent_award_type_name)) as unmatched_name_count,
pk.idv_type_name as PKidv_type_name,
max(iif(fk.parent_award_type_name=pk.idv_type_name or
	fk.parent_award_type_name='' or
	charindex('('+fk.parent_award_type_name+')',pk.idv_type_name )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.idv_type_code' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.idv_type_code as pk
On pk.idv_type_code=fk.[referenced_idv_type]
GROUP BY fk.[referenced_idv_type], pk.idv_type_name
HAVING max(iif(fk.parent_award_type_name=pk.idv_type_name or
	fk.parent_award_type_name='' or
	charindex('('+fk.parent_award_type_name+')',pk.idv_type_name )>0,
	0,1))=1
ORDER BY fk.[referenced_idv_type]


--List new [referenced_mult_or_single] and updated parent_award_single_or_multiple_name for insertion into FPDSTypeTable.multipleorsingleawardidc
SELECT fk.[referenced_mult_or_single],
max(iif(fk.parent_award_single_or_multiple_name=pk.multipleorsingleawardidcText or
	fk.parent_award_single_or_multiple_name='' or
	charindex('('+fk.parent_award_single_or_multiple_name+')',pk.multipleorsingleawardidcText )>0,
	NULL,fk.parent_award_single_or_multiple_name)) as MaxOfNewFKparent_award_single_or_multiple_name,
count(distinct iif(fk.parent_award_single_or_multiple_name=pk.multipleorsingleawardidcText or
	fk.parent_award_single_or_multiple_name='' or
	charindex('('+fk.parent_award_single_or_multiple_name+')',pk.multipleorsingleawardidcText )>0,
	NULL,fk.parent_award_single_or_multiple_name)) as unmatched_name_count,
pk.multipleorsingleawardidcText as PKmultipleorsingleawardidcText,
max(iif(fk.parent_award_single_or_multiple_name=pk.multipleorsingleawardidcText or
	fk.parent_award_single_or_multiple_name='' or
	charindex('('+fk.parent_award_single_or_multiple_name+')',pk.multipleorsingleawardidcText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.multipleorsingleawardidc' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.multipleorsingleawardidc as pk
On pk.multipleorsingleawardidc=fk.[referenced_mult_or_single]
GROUP BY fk.[referenced_mult_or_single], pk.multipleorsingleawardidcText
HAVING max(iif(fk.parent_award_single_or_multiple_name=pk.multipleorsingleawardidcText or
	fk.parent_award_single_or_multiple_name='' or
	charindex('('+fk.parent_award_single_or_multiple_name+')',pk.multipleorsingleawardidcText )>0,
	0,1))=1
ORDER BY fk.[referenced_mult_or_single]


--List new [research] and updated research_name for insertion into ProductOrServiceCode.Research_Code
SELECT fk.[research],
max(iif(fk.research_name=pk.Research_Name or
	fk.research_name='' or
	charindex('('+fk.research_name+')',pk.Research_Name )>0,
	NULL,fk.research_name)) as MaxOfNewFKresearch_name,
count(distinct iif(fk.research_name=pk.Research_Name or
	fk.research_name='' or
	charindex('('+fk.research_name+')',pk.Research_Name )>0,
	NULL,fk.research_name)) as unmatched_name_count,
pk.Research_Name as PKResearch_Name,
max(iif(fk.research_name=pk.Research_Name or
	fk.research_name='' or
	charindex('('+fk.research_name+')',pk.Research_Name )>0,
	1,0)) as any_name_match,
'ProductOrServiceCode.Research_Code' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN ProductOrServiceCode.Research_Code as pk
On pk.Research_Code=fk.[research]
GROUP BY fk.[research], pk.Research_Name
HAVING max(iif(fk.research_name=pk.Research_Name or
	fk.research_name='' or
	charindex('('+fk.research_name+')',pk.Research_Name )>0,
	0,1))=1
ORDER BY fk.[research]


--List new [sam_exception] and updated sam_exception_description for insertion into Vendor.CCRexception
SELECT fk.[sam_exception],
max(iif(fk.sam_exception_description=pk.sam_exception_description or
	fk.sam_exception_description='' or
	charindex('('+fk.sam_exception_description+')',pk.sam_exception_description )>0,
	NULL,fk.sam_exception_description)) as MaxOfNewFKsam_exception_description,
count(distinct iif(fk.sam_exception_description=pk.sam_exception_description or
	fk.sam_exception_description='' or
	charindex('('+fk.sam_exception_description+')',pk.sam_exception_description )>0,
	NULL,fk.sam_exception_description)) as unmatched_name_count,
pk.sam_exception_description as PKsam_exception_description,
max(iif(fk.sam_exception_description=pk.sam_exception_description or
	fk.sam_exception_description='' or
	charindex('('+fk.sam_exception_description+')',pk.sam_exception_description )>0,
	1,0)) as any_name_match,
'Vendor.CCRexception' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN Vendor.CCRexception as pk
On pk.CCRexception=fk.[sam_exception]
GROUP BY fk.[sam_exception], pk.sam_exception_description
HAVING max(iif(fk.sam_exception_description=pk.sam_exception_description or
	fk.sam_exception_description='' or
	charindex('('+fk.sam_exception_description+')',pk.sam_exception_description )>0,
	0,1))=1
ORDER BY fk.[sam_exception]


--List new [sea_transportation] and updated sea_transportation_name for insertion into FPDSTypeTable.seatransportation
SELECT fk.[sea_transportation],
max(iif(fk.sea_transportation_name=pk.seatransportationText or
	fk.sea_transportation_name='' or
	charindex('('+fk.sea_transportation_name+')',pk.seatransportationText )>0,
	NULL,fk.sea_transportation_name)) as MaxOfNewFKsea_transportation_name,
count(distinct iif(fk.sea_transportation_name=pk.seatransportationText or
	fk.sea_transportation_name='' or
	charindex('('+fk.sea_transportation_name+')',pk.seatransportationText )>0,
	NULL,fk.sea_transportation_name)) as unmatched_name_count,
pk.seatransportationText as PKseatransportationText,
max(iif(fk.sea_transportation_name=pk.seatransportationText or
	fk.sea_transportation_name='' or
	charindex('('+fk.sea_transportation_name+')',pk.seatransportationText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.seatransportation' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.seatransportation as pk
On pk.seatransportation=fk.[sea_transportation]
GROUP BY fk.[sea_transportation], pk.seatransportationText
HAVING max(iif(fk.sea_transportation_name=pk.seatransportationText or
	fk.sea_transportation_name='' or
	charindex('('+fk.sea_transportation_name+')',pk.seatransportationText )>0,
	0,1))=1
ORDER BY fk.[sea_transportation]


--List new [solicitation_procedures] and updated solicitation_procedures_name for insertion into FPDSTypeTable.solicitationprocedures
SELECT fk.[solicitation_procedures],
max(iif(fk.solicitation_procedures_name=pk.solicitationproceduresText or
	fk.solicitation_procedures_name='' or
	charindex('('+fk.solicitation_procedures_name+')',pk.solicitationproceduresText )>0,
	NULL,fk.solicitation_procedures_name)) as MaxOfNewFKsolicitation_procedures_name,
count(distinct iif(fk.solicitation_procedures_name=pk.solicitationproceduresText or
	fk.solicitation_procedures_name='' or
	charindex('('+fk.solicitation_procedures_name+')',pk.solicitationproceduresText )>0,
	NULL,fk.solicitation_procedures_name)) as unmatched_name_count,
pk.solicitationproceduresText as PKsolicitationproceduresText,
max(iif(fk.solicitation_procedures_name=pk.solicitationproceduresText or
	fk.solicitation_procedures_name='' or
	charindex('('+fk.solicitation_procedures_name+')',pk.solicitationproceduresText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.solicitationprocedures' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.solicitationprocedures as pk
On pk.solicitationprocedures=fk.[solicitation_procedures]
GROUP BY fk.[solicitation_procedures], pk.solicitationproceduresText
HAVING max(iif(fk.solicitation_procedures_name=pk.solicitationproceduresText or
	fk.solicitation_procedures_name='' or
	charindex('('+fk.solicitation_procedures_name+')',pk.solicitationproceduresText )>0,
	0,1))=1
ORDER BY fk.[solicitation_procedures]


--List new [subcontracting_plan] and updated subcontracting_plan_name for insertion into FPDSTypeTable.subcontractplan
SELECT fk.[subcontracting_plan],
max(iif(fk.subcontracting_plan_name=pk.subcontractplanText or
	fk.subcontracting_plan_name='' or
	charindex('('+fk.subcontracting_plan_name+')',pk.subcontractplanText )>0,
	NULL,fk.subcontracting_plan_name)) as MaxOfNewFKsubcontracting_plan_name,
count(distinct iif(fk.subcontracting_plan_name=pk.subcontractplanText or
	fk.subcontracting_plan_name='' or
	charindex('('+fk.subcontracting_plan_name+')',pk.subcontractplanText )>0,
	NULL,fk.subcontracting_plan_name)) as unmatched_name_count,
pk.subcontractplanText as PKsubcontractplanText,
max(iif(fk.subcontracting_plan_name=pk.subcontractplanText or
	fk.subcontracting_plan_name='' or
	charindex('('+fk.subcontracting_plan_name+')',pk.subcontractplanText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.subcontractplan' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.subcontractplan as pk
On pk.subcontractplan=fk.[subcontracting_plan]
GROUP BY fk.[subcontracting_plan], pk.subcontractplanText
HAVING max(iif(fk.subcontracting_plan_name=pk.subcontractplanText or
	fk.subcontracting_plan_name='' or
	charindex('('+fk.subcontracting_plan_name+')',pk.subcontractplanText )>0,
	0,1))=1
ORDER BY fk.[subcontracting_plan]


--List new [type_of_contract_pricing] and updated type_of_contract_pricing_name for insertion into FPDSTypeTable.typeofcontractpricing
SELECT fk.[type_of_contract_pricing],
max(iif(fk.type_of_contract_pricing_name=pk.TypeOfContractPricingText or
	fk.type_of_contract_pricing_name='' or
	charindex('('+fk.type_of_contract_pricing_name+')',pk.TypeOfContractPricingText )>0,
	NULL,fk.type_of_contract_pricing_name)) as MaxOfNewFKtype_of_contract_pricing_name,
count(distinct iif(fk.type_of_contract_pricing_name=pk.TypeOfContractPricingText or
	fk.type_of_contract_pricing_name='' or
	charindex('('+fk.type_of_contract_pricing_name+')',pk.TypeOfContractPricingText )>0,
	NULL,fk.type_of_contract_pricing_name)) as unmatched_name_count,
pk.TypeOfContractPricingText as PKTypeOfContractPricingText,
max(iif(fk.type_of_contract_pricing_name=pk.TypeOfContractPricingText or
	fk.type_of_contract_pricing_name='' or
	charindex('('+fk.type_of_contract_pricing_name+')',pk.TypeOfContractPricingText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.typeofcontractpricing' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.typeofcontractpricing as pk
On pk.TypeOfContractPricing=fk.[type_of_contract_pricing]
GROUP BY fk.[type_of_contract_pricing], pk.TypeOfContractPricingText
HAVING max(iif(fk.type_of_contract_pricing_name=pk.TypeOfContractPricingText or
	fk.type_of_contract_pricing_name='' or
	charindex('('+fk.type_of_contract_pricing_name+')',pk.TypeOfContractPricingText )>0,
	0,1))=1
ORDER BY fk.[type_of_contract_pricing]


--List new [type_of_idc] and updated type_of_idc_name for insertion into FPDSTypeTable.TypeOfIDC
SELECT fk.[type_of_idc],
max(iif(fk.type_of_idc_name=pk.typeOfIDCdescription or
	fk.type_of_idc_name='' or
	charindex('('+fk.type_of_idc_name+')',pk.typeOfIDCdescription )>0,
	NULL,fk.type_of_idc_name)) as MaxOfNewFKtype_of_idc_name,
count(distinct iif(fk.type_of_idc_name=pk.typeOfIDCdescription or
	fk.type_of_idc_name='' or
	charindex('('+fk.type_of_idc_name+')',pk.typeOfIDCdescription )>0,
	NULL,fk.type_of_idc_name)) as unmatched_name_count,
pk.typeOfIDCdescription as PKtypeOfIDCdescription,
max(iif(fk.type_of_idc_name=pk.typeOfIDCdescription or
	fk.type_of_idc_name='' or
	charindex('('+fk.type_of_idc_name+')',pk.typeOfIDCdescription )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.TypeOfIDC' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.TypeOfIDC as pk
On pk.typeofIDC=fk.[type_of_idc]
GROUP BY fk.[type_of_idc], pk.typeOfIDCdescription
HAVING max(iif(fk.type_of_idc_name=pk.typeOfIDCdescription or
	fk.type_of_idc_name='' or
	charindex('('+fk.type_of_idc_name+')',pk.typeOfIDCdescription )>0,
	0,1))=1
ORDER BY fk.[type_of_idc]


--List new [type_set_aside] and updated type_of_set_aside_name for insertion into FPDSTypeTable.typeofsetaside
SELECT fk.[type_set_aside],
max(iif(fk.type_of_set_aside_name=pk.typeofsetasideText or
	fk.type_of_set_aside_name='' or
	charindex('('+fk.type_of_set_aside_name+')',pk.typeofsetasideText )>0,
	NULL,fk.type_of_set_aside_name)) as MaxOfNewFKtype_of_set_aside_name,
count(distinct iif(fk.type_of_set_aside_name=pk.typeofsetasideText or
	fk.type_of_set_aside_name='' or
	charindex('('+fk.type_of_set_aside_name+')',pk.typeofsetasideText )>0,
	NULL,fk.type_of_set_aside_name)) as unmatched_name_count,
pk.typeofsetasideText as PKtypeofsetasideText,
max(iif(fk.type_of_set_aside_name=pk.typeofsetasideText or
	fk.type_of_set_aside_name='' or
	charindex('('+fk.type_of_set_aside_name+')',pk.typeofsetasideText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.typeofsetaside' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.typeofsetaside as pk
On pk.typeofsetaside=fk.[type_set_aside]
GROUP BY fk.[type_set_aside], pk.typeofsetasideText
HAVING max(iif(fk.type_of_set_aside_name=pk.typeofsetasideText or
	fk.type_of_set_aside_name='' or
	charindex('('+fk.type_of_set_aside_name+')',pk.typeofsetasideText )>0,
	0,1))=1
ORDER BY fk.[type_set_aside]


--List new [ultimate_parent_legal_enti] for insertion into Vendor.VendorName
SELECT fk.[ultimate_parent_legal_enti],
'Vendor.VendorName' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN Vendor.VendorName as pk
On pk.vendorname=fk.[ultimate_parent_legal_enti]
WHERE pk.vendorname is NULL
GROUP BY fk.[ultimate_parent_legal_enti]
ORDER BY fk.[ultimate_parent_legal_enti]


--List new [undefinitized_action] and updated undefinitized_action_name for insertion into FPDSTypeTable.lettercontract
SELECT fk.[undefinitized_action],
max(iif(fk.undefinitized_action_name=pk.UndefinitizedActionText or
	fk.undefinitized_action_name='' or
	charindex('('+fk.undefinitized_action_name+')',pk.UndefinitizedActionText )>0,
	NULL,fk.undefinitized_action_name)) as MaxOfNewFKundefinitized_action_name,
count(distinct iif(fk.undefinitized_action_name=pk.UndefinitizedActionText or
	fk.undefinitized_action_name='' or
	charindex('('+fk.undefinitized_action_name+')',pk.UndefinitizedActionText )>0,
	NULL,fk.undefinitized_action_name)) as unmatched_name_count,
pk.UndefinitizedActionText as PKUndefinitizedActionText,
max(iif(fk.undefinitized_action_name=pk.UndefinitizedActionText or
	fk.undefinitized_action_name='' or
	charindex('('+fk.undefinitized_action_name+')',pk.UndefinitizedActionText )>0,
	1,0)) as any_name_match,
'FPDSTypeTable.lettercontract' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN FPDSTypeTable.lettercontract as pk
On pk.LetterContract=fk.[undefinitized_action]
GROUP BY fk.[undefinitized_action], pk.UndefinitizedActionText
HAVING max(iif(fk.undefinitized_action_name=pk.UndefinitizedActionText or
	fk.undefinitized_action_name='' or
	charindex('('+fk.undefinitized_action_name+')',pk.UndefinitizedActionText )>0,
	0,1))=1
ORDER BY fk.[undefinitized_action]


--List new [vendor_legal_org_name] for insertion into Vendor.VendorName
SELECT fk.[vendor_legal_org_name],
'Vendor.VendorName' as PrimaryKeyTable
FROM ErrorLogging.source_procurement_transaction as fk
LEFT OUTER JOIN Vendor.VendorName as pk
On pk.vendorname=fk.[vendor_legal_org_name]
WHERE pk.vendorname is NULL
GROUP BY fk.[vendor_legal_org_name]
ORDER BY fk.[vendor_legal_org_name]


